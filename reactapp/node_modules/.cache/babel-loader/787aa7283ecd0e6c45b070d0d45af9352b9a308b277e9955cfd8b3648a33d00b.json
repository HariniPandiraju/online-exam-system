{"ast":null,"code":"import axios from 'axios';\nconst API_BASE = 'http://localhost:9090/api';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE,\n  timeout: 10000\n});\n\n// Request interceptor to add auth token\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('user');\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// ----------- Authentication Endpoints -----------\nexport const login = credentials => apiClient.post('/auth/login', credentials);\nexport const register = userData => apiClient.post('/auth/register', userData);\nexport const logout = () => apiClient.post('/auth/logout');\n\n// ----------- Teacher Endpoints -----------\nexport const createExam = examData => apiClient.post('/exams', examData);\nexport const addQuestionToExam = (examId, questionData) => apiClient.post(`/exams/${examId}/questions`, questionData);\nexport const getExamsByTeacher = teacherUsername => apiClient.get('/exams', {\n  params: {\n    createdBy: teacherUsername\n  }\n});\nexport const activateExam = examId => apiClient.patch(`/exams/${examId}/status`, {\n  isActive: true\n});\nexport const deactivateExam = examId => apiClient.patch(`/exams/${examId}/status`, {\n  isActive: false\n});\nexport const getExamById = examId => apiClient.get(`/exams/${examId}`);\n\n// ----------- Student Endpoints -----------\nexport const getAvailableExams = () => apiClient.get('/student/exams');\nexport const startExam = (examId, studentUsername) => apiClient.post(`/student/exams/${examId}/start`, {\n  studentUsername\n});\nexport const submitAnswer = (studentExamId, questionId, selectedOption) => apiClient.post(`/student/exams/${studentExamId}/answers`, {\n  questionId,\n  selectedOption\n});\nexport const completeExam = studentExamId => apiClient.post(`/student/exams/${studentExamId}/complete`);\nexport const getExamResults = studentExamId => apiClient.get(`/student/exams/${studentExamId}/results`);\n\n// Simple test endpoints\nexport const createSimpleExam = examData => apiClient.post('/simple/exam', examData);\nexport const addSimpleQuestion = (examId, questionData) => apiClient.post(`/simple/exam/${examId}/question`, questionData);\nexport const getSimpleExams = () => apiClient.get('/simple/exams');\nexport const activateSimpleExam = examId => apiClient.patch(`/simple/exam/${examId}/activate`);\nexport const deactivateSimpleExam = examId => apiClient.patch(`/simple/exam/${examId}/deactivate`);\nexport const startSimpleExam = (examId, studentUsername) => apiClient.post(`/simple/exam/${examId}/start`, {\n  studentUsername\n});\n\n// Export apiClient for testing\nexport { apiClient };\n\n// Default export\nconst api = {\n  login,\n  register,\n  logout,\n  createExam,\n  addQuestionToExam,\n  getExamsByTeacher,\n  activateExam,\n  deactivateExam,\n  getExamById,\n  getAvailableExams,\n  startExam,\n  submitAnswer,\n  completeExam,\n  getExamResults,\n  createSimpleExam,\n  addSimpleQuestion,\n  getSimpleExams,\n  activateSimpleExam,\n  deactivateSimpleExam,\n  startSimpleExam,\n  apiClient\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE","apiClient","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","login","credentials","post","register","userData","logout","createExam","examData","addQuestionToExam","examId","questionData","getExamsByTeacher","teacherUsername","get","params","createdBy","activateExam","patch","isActive","deactivateExam","getExamById","getAvailableExams","startExam","studentUsername","submitAnswer","studentExamId","questionId","selectedOption","completeExam","getExamResults","createSimpleExam","addSimpleQuestion","getSimpleExams","activateSimpleExam","deactivateSimpleExam","startSimpleExam","api"],"sources":["D:/newnew/online-exam-system/reactapp/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE = 'http://localhost:9090/api';\r\n\r\n// Create axios instance with default config\r\nconst apiClient = axios.create({\r\n    baseURL: API_BASE,\r\n    timeout: 10000,\r\n});\r\n\r\n// Request interceptor to add auth token\r\napiClient.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('authToken');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napiClient.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        if (error.response?.status === 401) {\r\n            localStorage.removeItem('user');\r\n            localStorage.removeItem('authToken');\r\n            window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// ----------- Authentication Endpoints -----------\r\nexport const login = (credentials) => \r\n    apiClient.post('/auth/login', credentials);\r\n\r\nexport const register = (userData) => \r\n    apiClient.post('/auth/register', userData);\r\n\r\nexport const logout = () => \r\n    apiClient.post('/auth/logout');\r\n\r\n// ----------- Teacher Endpoints -----------\r\nexport const createExam = (examData) =>\r\n    apiClient.post('/exams', examData);\r\n\r\nexport const addQuestionToExam = (examId, questionData) =>\r\n    apiClient.post(`/exams/${examId}/questions`, questionData);\r\n\r\nexport const getExamsByTeacher = (teacherUsername) =>\r\n    apiClient.get('/exams', { params: { createdBy: teacherUsername } });\r\n\r\nexport const activateExam = (examId) =>\r\n    apiClient.patch(`/exams/${examId}/status`, { isActive: true });\r\n\r\nexport const deactivateExam = (examId) =>\r\n    apiClient.patch(`/exams/${examId}/status`, { isActive: false });\r\n\r\nexport const getExamById = (examId) =>\r\n    apiClient.get(`/exams/${examId}`);\r\n\r\n// ----------- Student Endpoints -----------\r\nexport const getAvailableExams = () =>\r\n    apiClient.get('/student/exams');\r\n\r\nexport const startExam = (examId, studentUsername) =>\r\n    apiClient.post(`/student/exams/${examId}/start`, { studentUsername });\r\n\r\nexport const submitAnswer = (studentExamId, questionId, selectedOption) =>\r\n    apiClient.post(`/student/exams/${studentExamId}/answers`, {\r\n        questionId,\r\n        selectedOption,\r\n    });\r\n\r\nexport const completeExam = (studentExamId) =>\r\n    apiClient.post(`/student/exams/${studentExamId}/complete`);\r\n\r\nexport const getExamResults = (studentExamId) =>\r\n    apiClient.get(`/student/exams/${studentExamId}/results`);\r\n\r\n// Simple test endpoints\r\nexport const createSimpleExam = (examData) =>\r\n    apiClient.post('/simple/exam', examData);\r\n\r\nexport const addSimpleQuestion = (examId, questionData) =>\r\n    apiClient.post(`/simple/exam/${examId}/question`, questionData);\r\n\r\nexport const getSimpleExams = () =>\r\n    apiClient.get('/simple/exams');\r\n\r\nexport const activateSimpleExam = (examId) =>\r\n    apiClient.patch(`/simple/exam/${examId}/activate`);\r\n\r\nexport const deactivateSimpleExam = (examId) =>\r\n    apiClient.patch(`/simple/exam/${examId}/deactivate`);\r\n\r\nexport const startSimpleExam = (examId, studentUsername) =>\r\n    apiClient.post(`/simple/exam/${examId}/start`, { studentUsername });\r\n\r\n// Export apiClient for testing\r\nexport { apiClient };\r\n\r\n// Default export\r\nconst api = {\r\n    login,\r\n    register,\r\n    logout,\r\n    createExam,\r\n    addQuestionToExam,\r\n    getExamsByTeacher,\r\n    activateExam,\r\n    deactivateExam,\r\n    getExamById,\r\n    getAvailableExams,\r\n    startExam,\r\n    submitAnswer,\r\n    completeExam,\r\n    getExamResults,\r\n    createSimpleExam,\r\n    addSimpleQuestion,\r\n    getSimpleExams,\r\n    activateSimpleExam,\r\n    deactivateSimpleExam,\r\n    startSimpleExam,\r\n    apiClient,\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}