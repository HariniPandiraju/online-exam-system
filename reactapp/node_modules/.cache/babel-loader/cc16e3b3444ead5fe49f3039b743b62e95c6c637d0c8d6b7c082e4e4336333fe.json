{"ast":null,"code":"var _jsxFileName = \"D:\\\\newnew\\\\online-exam-system\\\\reactapp\\\\src\\\\components\\\\ExamInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport * as api from '../utils/api';\nimport '../styles/exam.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExamInterface(props) {\n  _s();\n  var _props$location$state, _props$location;\n  const locationState = (_props$location$state = (_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.state) !== null && _props$location$state !== void 0 ? _props$location$state : {};\n  const {\n    questions = [],\n    exam = {},\n    studentExamId = ''\n  } = locationState;\n  const {\n    studentExamId: idFromUrl\n  } = useParams();\n  const sid = studentExamId || idFromUrl || '';\n  const navigate = useNavigate();\n  const [index, setIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState((exam.duration || 15) * 60); // in seconds\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showSubmitModal, setShowSubmitModal] = useState(false);\n  const current = questions[index] || {};\n\n  // Timer effect\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      handleAutoSubmit();\n      return;\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  // Auto-save answers\n  useEffect(() => {\n    const autoSave = setTimeout(() => {\n      if (answers[current.questionId] && current.questionId) {\n        saveAnswer(current.questionId, answers[current.questionId]);\n      }\n    }, 30000); // Auto-save every 30 seconds\n\n    return () => clearTimeout(autoSave);\n  }, [answers, current.questionId]);\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n  const getTimerClass = () => {\n    if (timeLeft <= 300) return 'timer-critical'; // 5 minutes\n    if (timeLeft <= 900) return 'timer-warning'; // 15 minutes\n    return '';\n  };\n  const selectOption = opt => {\n    setAnswers(prev => ({\n      ...prev,\n      [current.questionId]: opt\n    }));\n  };\n  const saveAnswer = async (questionId, selectedOption) => {\n    try {\n      await api.submitAnswer(sid, questionId, selectedOption);\n      // Show auto-save indicator\n      showAutoSaveIndicator();\n    } catch (err) {\n      console.error('Failed to save answer:', err);\n    }\n  };\n  const showAutoSaveIndicator = () => {\n    const indicator = document.querySelector('.auto-save-indicator');\n    if (indicator) {\n      indicator.classList.add('show');\n      setTimeout(() => {\n        indicator.classList.remove('show');\n      }, 2000);\n    }\n  };\n  const next = async () => {\n    if (answers[current.questionId]) {\n      await saveAnswer(current.questionId, answers[current.questionId]);\n    }\n    if (index < questions.length - 1) {\n      setIndex(i => i + 1);\n    }\n  };\n  const prev = () => {\n    if (index > 0) setIndex(i => i - 1);\n  };\n  const goToQuestion = questionIndex => {\n    setIndex(questionIndex);\n  };\n  const handleAutoSubmit = async () => {\n    setIsSubmitting(true);\n    try {\n      await api.completeExam(sid);\n      navigate(`/student/results/${sid}`);\n    } catch (err) {\n      console.error('Auto-submit failed:', err);\n    }\n  };\n  const handleSubmitExam = () => {\n    setShowSubmitModal(true);\n  };\n  const confirmSubmit = async () => {\n    setIsSubmitting(true);\n    try {\n      await api.completeExam(sid);\n      navigate(`/student/results/${sid}`);\n    } catch (err) {\n      console.error('Submit failed:', err);\n      setIsSubmitting(false);\n      setShowSubmitModal(false);\n    }\n  };\n  const getAnsweredCount = () => {\n    return Object.keys(answers).length;\n  };\n  const getProgressPercentage = () => {\n    return getAnsweredCount() / questions.length * 100;\n  };\n  if (!current.questionText) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"No questions available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exam-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-save-indicator\",\n      children: \"Answer saved automatically\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: exam.title || 'Exam'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exam-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDCDD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Question \", index + 1, \" of \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2705\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [getAnsweredCount(), \" answered\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `exam-timer ${getTimerClass()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-label\",\n          children: \"Time Remaining\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-display\",\n          children: formatTime(timeLeft)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-number\",\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: current.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-options\",\n            children: ['A', 'B', 'C', 'D'].map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: `answer-option ${answers[current.questionId] === option ? 'selected' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${current.questionId}`,\n                value: option,\n                checked: answers[current.questionId] === option,\n                onChange: () => selectOption(option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answer-text\",\n                children: current[`option${option}`]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this)]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exam-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"control-btn btn-nav\",\n              onClick: prev,\n              disabled: index === 0,\n              children: \"\\u2190 Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"control-btn btn-nav\",\n              onClick: next,\n              disabled: index === questions.length - 1,\n              children: \"Next \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn btn-submit\",\n            onClick: handleSubmitExam,\n            disabled: isSubmitting,\n            children: isSubmitting ? 'Submitting...' : 'Submit Exam'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"nav-title\",\n          children: \"Question Navigator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exam-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [Math.round(getProgressPercentage()), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${getProgressPercentage()}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-palette\",\n          children: questions.map((_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `palette-item ${i === index ? 'current' : ''} ${answers[questions[i].questionId] ? 'answered' : ''}`,\n            onClick: () => goToQuestion(i),\n            children: i + 1\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"palette-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color legend-current\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Current\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color legend-answered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Answered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color legend-unanswered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Not Answered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), showSubmitModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Submit Exam?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You have answered \", getAnsweredCount(), \" out of \", questions.length, \" questions. Are you sure you want to submit your exam?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-cancel\",\n            onClick: () => setShowSubmitModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-confirm\",\n            onClick: confirmSubmit,\n            disabled: isSubmitting,\n            children: isSubmitting ? 'Submitting...' : 'Yes, Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n_s(ExamInterface, \"rgtkJGW1ztlfikzQiVj8kWvdI9I=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamInterface;\nvar _c;\n$RefreshReg$(_c, \"ExamInterface\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","api","jsxDEV","_jsxDEV","ExamInterface","props","_s","_props$location$state","_props$location","locationState","location","state","questions","exam","studentExamId","idFromUrl","sid","navigate","index","setIndex","answers","setAnswers","timeLeft","setTimeLeft","duration","isSubmitting","setIsSubmitting","showSubmitModal","setShowSubmitModal","current","handleAutoSubmit","timer","setInterval","prev","clearInterval","autoSave","setTimeout","questionId","saveAnswer","clearTimeout","formatTime","seconds","minutes","Math","floor","secs","toString","padStart","getTimerClass","selectOption","opt","selectedOption","submitAnswer","showAutoSaveIndicator","err","console","error","indicator","document","querySelector","classList","add","remove","next","length","i","goToQuestion","questionIndex","completeExam","handleSubmitExam","confirmSubmit","getAnsweredCount","Object","keys","getProgressPercentage","questionText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","map","option","type","name","value","checked","onChange","onClick","disabled","round","style","width","_","_c","$RefreshReg$"],"sources":["D:/newnew/online-exam-system/reactapp/src/components/ExamInterface.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport * as api from '../utils/api';\r\nimport '../styles/exam.css';\r\n\r\nexport default function ExamInterface(props) {\r\n    const locationState = props.location?.state ?? {};\r\n    const { questions = [], exam = {}, studentExamId = '' } = locationState;\r\n    const { studentExamId: idFromUrl } = useParams();\r\n    const sid = studentExamId || idFromUrl || '';\r\n    const navigate = useNavigate();\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const [answers, setAnswers] = useState({});\r\n    const [timeLeft, setTimeLeft] = useState((exam.duration || 15) * 60); // in seconds\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [showSubmitModal, setShowSubmitModal] = useState(false);\r\n    \r\n    const current = questions[index] || {};\r\n\r\n    // Timer effect\r\n    useEffect(() => {\r\n        if (timeLeft <= 0) {\r\n            handleAutoSubmit();\r\n            return;\r\n        }\r\n\r\n        const timer = setInterval(() => {\r\n            setTimeLeft(prev => prev - 1);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [timeLeft]);\r\n\r\n    // Auto-save answers\r\n    useEffect(() => {\r\n        const autoSave = setTimeout(() => {\r\n            if (answers[current.questionId] && current.questionId) {\r\n                saveAnswer(current.questionId, answers[current.questionId]);\r\n            }\r\n        }, 30000); // Auto-save every 30 seconds\r\n\r\n        return () => clearTimeout(autoSave);\r\n    }, [answers, current.questionId]);\r\n\r\n    const formatTime = (seconds) => {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const secs = seconds % 60;\r\n        return `${minutes}:${secs.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    const getTimerClass = () => {\r\n        if (timeLeft <= 300) return 'timer-critical'; // 5 minutes\r\n        if (timeLeft <= 900) return 'timer-warning'; // 15 minutes\r\n        return '';\r\n    };\r\n\r\n    const selectOption = (opt) => {\r\n        setAnswers((prev) => ({ ...prev, [current.questionId]: opt }));\r\n    };\r\n\r\n    const saveAnswer = async (questionId, selectedOption) => {\r\n        try {\r\n            await api.submitAnswer(sid, questionId, selectedOption);\r\n            // Show auto-save indicator\r\n            showAutoSaveIndicator();\r\n        } catch (err) {\r\n            console.error('Failed to save answer:', err);\r\n        }\r\n    };\r\n\r\n    const showAutoSaveIndicator = () => {\r\n        const indicator = document.querySelector('.auto-save-indicator');\r\n        if (indicator) {\r\n            indicator.classList.add('show');\r\n            setTimeout(() => {\r\n                indicator.classList.remove('show');\r\n            }, 2000);\r\n        }\r\n    };\r\n\r\n    const next = async () => {\r\n        if (answers[current.questionId]) {\r\n            await saveAnswer(current.questionId, answers[current.questionId]);\r\n        }\r\n        if (index < questions.length - 1) {\r\n            setIndex((i) => i + 1);\r\n        }\r\n    };\r\n\r\n    const prev = () => {\r\n        if (index > 0) setIndex((i) => i - 1);\r\n    };\r\n\r\n    const goToQuestion = (questionIndex) => {\r\n        setIndex(questionIndex);\r\n    };\r\n\r\n    const handleAutoSubmit = async () => {\r\n        setIsSubmitting(true);\r\n        try {\r\n            await api.completeExam(sid);\r\n            navigate(`/student/results/${sid}`);\r\n        } catch (err) {\r\n            console.error('Auto-submit failed:', err);\r\n        }\r\n    };\r\n\r\n    const handleSubmitExam = () => {\r\n        setShowSubmitModal(true);\r\n    };\r\n\r\n    const confirmSubmit = async () => {\r\n        setIsSubmitting(true);\r\n        try {\r\n            await api.completeExam(sid);\r\n            navigate(`/student/results/${sid}`);\r\n        } catch (err) {\r\n            console.error('Submit failed:', err);\r\n            setIsSubmitting(false);\r\n            setShowSubmitModal(false);\r\n        }\r\n    };\r\n\r\n    const getAnsweredCount = () => {\r\n        return Object.keys(answers).length;\r\n    };\r\n\r\n    const getProgressPercentage = () => {\r\n        return (getAnsweredCount() / questions.length) * 100;\r\n    };\r\n\r\n    if (!current.questionText) {\r\n        return (\r\n            <div className=\"exam-container\">\r\n                <div className=\"loading\">No questions available</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"exam-container\">\r\n            {/* Auto-save indicator */}\r\n            <div className=\"auto-save-indicator\">\r\n                Answer saved automatically\r\n            </div>\r\n\r\n            {/* Exam Header */}\r\n            <div className=\"exam-header\">\r\n                <div className=\"exam-info\">\r\n                    <h2>{exam.title || 'Exam'}</h2>\r\n                    <div className=\"exam-meta\">\r\n                        <div className=\"meta-item\">\r\n                            <span>📝</span>\r\n                            <span>Question {index + 1} of {questions.length}</span>\r\n                        </div>\r\n                        <div className=\"meta-item\">\r\n                            <span>✅</span>\r\n                            <span>{getAnsweredCount()} answered</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className={`exam-timer ${getTimerClass()}`}>\r\n                    <div className=\"timer-label\">Time Remaining</div>\r\n                    <div className=\"timer-display\">{formatTime(timeLeft)}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"exam-content\">\r\n                {/* Question Panel */}\r\n                <div className=\"question-panel\">\r\n                    <div className=\"question-header\">\r\n                        <div className=\"question-number\">Question {index + 1}</div>\r\n                        <div className=\"question-text\">{current.questionText}</div>\r\n                    </div>\r\n\r\n                    <div className=\"question-body\">\r\n                        <div className=\"answer-options\">\r\n                            {['A', 'B', 'C', 'D'].map(option => (\r\n                                <label \r\n                                    key={option}\r\n                                    className={`answer-option ${answers[current.questionId] === option ? 'selected' : ''}`}\r\n                                >\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name={`question-${current.questionId}`}\r\n                                        value={option}\r\n                                        checked={answers[current.questionId] === option}\r\n                                        onChange={() => selectOption(option)}\r\n                                    />\r\n                                    <div className=\"answer-text\">\r\n                                        {current[`option${option}`]}\r\n                                    </div>\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Navigation Controls */}\r\n                    <div className=\"exam-controls\">\r\n                        <div className=\"control-group\">\r\n                            <button \r\n                                className=\"control-btn btn-nav\" \r\n                                onClick={prev}\r\n                                disabled={index === 0}\r\n                            >\r\n                                ← Previous\r\n                            </button>\r\n                            <button \r\n                                className=\"control-btn btn-nav\" \r\n                                onClick={next}\r\n                                disabled={index === questions.length - 1}\r\n                            >\r\n                                Next →\r\n                            </button>\r\n                        </div>\r\n\r\n                        <button \r\n                            className=\"control-btn btn-submit\" \r\n                            onClick={handleSubmitExam}\r\n                            disabled={isSubmitting}\r\n                        >\r\n                            {isSubmitting ? 'Submitting...' : 'Submit Exam'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Question Navigation Sidebar */}\r\n                <div className=\"question-nav\">\r\n                    <h3 className=\"nav-title\">Question Navigator</h3>\r\n                    \r\n                    {/* Progress */}\r\n                    <div className=\"exam-progress\">\r\n                        <div className=\"progress-info\">\r\n                            <span>Progress</span>\r\n                            <span>{Math.round(getProgressPercentage())}%</span>\r\n                        </div>\r\n                        <div className=\"progress-bar\">\r\n                            <div \r\n                                className=\"progress-fill\" \r\n                                style={{ width: `${getProgressPercentage()}%` }}\r\n                            ></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Question Palette */}\r\n                    <div className=\"question-palette\">\r\n                        {questions.map((_, i) => (\r\n                            <button\r\n                                key={i}\r\n                                className={`palette-item ${i === index ? 'current' : ''} ${answers[questions[i].questionId] ? 'answered' : ''}`}\r\n                                onClick={() => goToQuestion(i)}\r\n                            >\r\n                                {i + 1}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {/* Legend */}\r\n                    <div className=\"palette-legend\">\r\n                        <div className=\"legend-item\">\r\n                            <div className=\"legend-color legend-current\"></div>\r\n                            <span>Current</span>\r\n                        </div>\r\n                        <div className=\"legend-item\">\r\n                            <div className=\"legend-color legend-answered\"></div>\r\n                            <span>Answered</span>\r\n                        </div>\r\n                        <div className=\"legend-item\">\r\n                            <div className=\"legend-color legend-unanswered\"></div>\r\n                            <span>Not Answered</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Submit Confirmation Modal */}\r\n            {showSubmitModal && (\r\n                <div className=\"submit-modal-overlay\">\r\n                    <div className=\"submit-modal\">\r\n                        <h3>Submit Exam?</h3>\r\n                        <p>\r\n                            You have answered {getAnsweredCount()} out of {questions.length} questions.\r\n                            Are you sure you want to submit your exam?\r\n                        </p>\r\n                        <div className=\"submit-modal-actions\">\r\n                            <button \r\n                                className=\"btn btn-cancel\"\r\n                                onClick={() => setShowSubmitModal(false)}\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                            <button \r\n                                className=\"btn btn-confirm\"\r\n                                onClick={confirmSubmit}\r\n                                disabled={isSubmitting}\r\n                            >\r\n                                {isSubmitting ? 'Submitting...' : 'Yes, Submit'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}