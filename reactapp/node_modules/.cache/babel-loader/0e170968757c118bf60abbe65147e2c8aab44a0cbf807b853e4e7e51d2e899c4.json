{"ast":null,"code":"var _jsxFileName = \"D:\\\\newnew\\\\online-exam-system\\\\reactapp\\\\src\\\\components\\\\ExamCreator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport * as api from '../utils/api';\nimport '../styles/forms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExamCreator() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    examId\n  } = useParams();\n  const isEditing = Boolean(examId);\n  const [exam, setExam] = useState({\n    title: '',\n    description: '',\n    duration: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [savedExamId, setSavedExamId] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [question, setQuestion] = useState({\n    questionText: '',\n    optionA: '',\n    optionB: '',\n    optionC: '',\n    optionD: '',\n    correctOption: '',\n    marks: '1'\n  });\n  const [questionErrors, setQuestionErrors] = useState({});\n  const [questionsAdded, setQuestionsAdded] = useState(0);\n  const [addedQuestions, setAddedQuestions] = useState([]);\n  const [addingQuestion, setAddingQuestion] = useState(false);\n  useEffect(() => {\n    if (isEditing) {\n      loadExamForEditing();\n    }\n  }, [examId, isEditing]);\n  const loadExamForEditing = async () => {\n    try {\n      // Load exam details - you'll need to add this API endpoint\n      // const examResponse = await api.getExamById(examId);\n      // setExam(examResponse.data);\n      // setSavedExamId(examId);\n    } catch (error) {\n      setErrors({\n        api: 'Failed to load exam for editing'\n      });\n    }\n  };\n  const validateExam = () => {\n    const newErrors = {};\n    if (!exam.title || exam.title.trim() === '') {\n      newErrors.title = 'Exam title is required';\n    } else if (exam.title.length > 100) {\n      newErrors.title = 'Title must be 100 characters or less';\n    }\n    if (!exam.description || exam.description.trim() === '') {\n      newErrors.description = 'Description is required';\n    } else if (exam.description.length > 500) {\n      newErrors.description = 'Description must be 500 characters or less';\n    }\n    if (!exam.duration || exam.duration.trim() === '') {\n      newErrors.duration = 'Duration is required';\n    } else {\n      const duration = parseInt(exam.duration, 10);\n      if (isNaN(duration) || duration < 10 || duration > 180) {\n        newErrors.duration = 'Duration must be between 10 and 180 minutes';\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const validateQuestion = () => {\n    const newErrors = {};\n    if (!question.questionText.trim()) {\n      newErrors.questionText = 'Question text is required';\n    } else if (question.questionText.length > 500) {\n      newErrors.questionText = 'Question text must be 500 characters or less';\n    }\n    if (!question.optionA.trim()) newErrors.optionA = 'Option A is required';\n    if (!question.optionB.trim()) newErrors.optionB = 'Option B is required';\n    if (!question.optionC.trim()) newErrors.optionC = 'Option C is required';\n    if (!question.optionD.trim()) newErrors.optionD = 'Option D is required';\n    if (!question.correctOption) {\n      newErrors.correctOption = 'Please select the correct answer';\n    } else if (!['A', 'B', 'C', 'D'].includes(question.correctOption)) {\n      newErrors.correctOption = 'Correct answer must be A, B, C, or D';\n    }\n    const marks = parseInt(question.marks, 10);\n    if (isNaN(marks) || marks < 1 || marks > 10) {\n      newErrors.marks = 'Marks must be between 1 and 10';\n    }\n    setQuestionErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSaveExam = async () => {\n    if (!validateExam()) return;\n    setSaving(true);\n    try {\n      const examData = {\n        title: exam.title.trim(),\n        description: exam.description.trim(),\n        duration: parseInt(exam.duration, 10)\n      };\n      let res;\n      let examId;\n      try {\n        var _res, _res$data, _res2, _res2$data;\n        // Try full API first\n        res = await api.createExam(examData);\n        examId = ((_res = res) === null || _res === void 0 ? void 0 : (_res$data = _res.data) === null || _res$data === void 0 ? void 0 : _res$data.examId) || ((_res2 = res) === null || _res2 === void 0 ? void 0 : (_res2$data = _res2.data) === null || _res2$data === void 0 ? void 0 : _res2$data.id);\n        console.log('✅ Full API - Created exam with ID:', examId);\n      } catch (fullApiError) {\n        var _res3, _res3$data, _res4, _res4$data;\n        console.log('❌ Full API failed, trying simple API:', fullApiError.message);\n        // Fallback to simple API\n        res = await api.createSimpleExam(examData);\n        examId = ((_res3 = res) === null || _res3 === void 0 ? void 0 : (_res3$data = _res3.data) === null || _res3$data === void 0 ? void 0 : _res3$data.examId) || ((_res4 = res) === null || _res4 === void 0 ? void 0 : (_res4$data = _res4.data) === null || _res4$data === void 0 ? void 0 : _res4$data.id);\n        console.log('✅ Simple API - Created exam with ID:', examId);\n      }\n      console.log('Full response:', res.data);\n      setSavedExamId(examId);\n      setErrors({});\n\n      // Show success message\n      alert(`Exam created successfully with ID: ${examId}! You can now add questions.`);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Exam creation failed:', err);\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Failed to create exam';\n      setErrors({\n        api: errorMessage\n      });\n      alert('Error creating exam: ' + errorMessage);\n    } finally {\n      setSaving(false);\n    }\n  };\n  const handleAddQuestion = async () => {\n    if (!savedExamId) {\n      alert('Please save the exam first before adding questions');\n      return;\n    }\n    if (!validateQuestion()) return;\n    setAddingQuestion(true);\n    try {\n      console.log('Adding question to exam ID:', savedExamId);\n      const questionData = {\n        questionText: question.questionText.trim(),\n        optionA: question.optionA.trim(),\n        optionB: question.optionB.trim(),\n        optionC: question.optionC.trim(),\n        optionD: question.optionD.trim(),\n        correctOption: question.correctOption,\n        marks: parseInt(question.marks, 10)\n      };\n      console.log('Question data:', questionData);\n      try {\n        // Try full API first\n        await api.addQuestionToExam(savedExamId, questionData);\n        console.log('✅ Full API success');\n      } catch (fullApiError) {\n        console.log('❌ Full API failed, trying simple API:', fullApiError.message);\n        // Fallback to simple API\n        await api.addSimpleQuestion(savedExamId, questionData);\n        console.log('✅ Simple API success');\n      }\n      setQuestionsAdded(n => n + 1);\n      setAddedQuestions(prev => [...prev, {\n        ...question\n      }]);\n\n      // Reset question form\n      setQuestion({\n        questionText: '',\n        optionA: '',\n        optionB: '',\n        optionC: '',\n        optionD: '',\n        correctOption: '',\n        marks: '1'\n      });\n      setQuestionErrors({});\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Question addition failed:', err);\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message || 'Failed to add question';\n      setQuestionErrors({\n        api: errorMessage\n      });\n      alert('Error adding question: ' + errorMessage);\n    } finally {\n      setAddingQuestion(false);\n    }\n  };\n  const handleFinishExam = () => {\n    if (questionsAdded === 0) {\n      alert('Please add at least one question before finishing');\n      return;\n    }\n    const confirmFinish = window.confirm(`You have created an exam with ${questionsAdded} questions. ` + 'Would you like to go back to the dashboard?');\n    if (confirmFinish) {\n      navigate('/teacher/dashboard');\n    }\n  };\n  const handleCancel = () => {\n    const confirmCancel = window.confirm('Are you sure you want to cancel? Any unsaved changes will be lost.');\n    if (confirmCancel) {\n      navigate('/teacher/dashboard');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"form-title\",\n            children: isEditing ? 'Edit Exam' : 'Create New Exam'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"form-subtitle\",\n            children: isEditing ? 'Modify exam details and questions' : 'Set up your exam details and add questions'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: savedExamId ? '100%' : '50%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"progress-text\",\n            children: [\"Step \", savedExamId ? '2' : '1', \" of 2: \", savedExamId ? 'Add Questions' : 'Exam Details']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Exam Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), errors.api && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errors.api\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-asterisk\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 43\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `form-input ${errors.title ? 'error' : ''}`,\n                type: \"text\",\n                value: exam.title,\n                onChange: e => setExam({\n                  ...exam,\n                  title: e.target.value\n                }),\n                placeholder: \"Enter exam title\",\n                maxLength: 100,\n                disabled: saving\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-error\",\n                children: errors.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 50\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-help\",\n                children: [exam.title.length, \"/100 characters\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: [\"Duration (minutes) \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-asterisk\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `form-input ${errors.duration ? 'error' : ''}`,\n                type: \"number\",\n                value: exam.duration,\n                onChange: e => setExam({\n                  ...exam,\n                  duration: e.target.value\n                }),\n                placeholder: \"e.g., 60\",\n                min: \"10\",\n                max: \"180\",\n                disabled: saving\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), errors.duration && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-error\",\n                children: errors.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-help\",\n                children: \"Between 10 and 180 minutes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: [\"Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required-asterisk\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: `form-textarea ${errors.description ? 'error' : ''}`,\n              value: exam.description,\n              onChange: e => setExam({\n                ...exam,\n                description: e.target.value\n              }),\n              placeholder: \"Enter exam description and instructions\",\n              maxLength: 500,\n              rows: 4,\n              disabled: saving\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this), errors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-error\",\n              children: errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-help\",\n              children: [exam.description.length, \"/500 characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: handleCancel,\n              disabled: saving,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), !savedExamId && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleSaveExam,\n              disabled: saving,\n              children: saving ? 'Saving...' : 'Save Exam & Add Questions'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), savedExamId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Add Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"questions-count\",\n              children: [\"Questions Added: \", questionsAdded]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }, this), questionErrors.api && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: questionErrors.api\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: [\"Question Text \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required-asterisk\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: `form-textarea ${questionErrors.questionText ? 'error' : ''}`,\n              value: question.questionText,\n              onChange: e => setQuestion({\n                ...question,\n                questionText: e.target.value\n              }),\n              placeholder: \"Enter your question here\",\n              maxLength: 500,\n              rows: 3,\n              disabled: addingQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 33\n            }, this), questionErrors.questionText && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-error\",\n              children: questionErrors.questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-help\",\n              children: [question.questionText.length, \"/500 characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: [\"Option A \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-asterisk\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 76\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `form-input ${questionErrors.optionA ? 'error' : ''}`,\n                type: \"text\",\n                value: question.optionA,\n                onChange: e => setQuestion({\n                  ...question,\n                  optionA: e.target.value\n                }),\n                placeholder: \"Enter option A\",\n                maxLength: 200,\n                disabled: addingQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 37\n              }, this), questionErrors.optionA && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-error\",\n                children: questionErrors.optionA\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: [\"Option B \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-asterisk\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 76\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `form-input ${questionErrors.optionB ? 'error' : ''}`,\n                type: \"text\",\n                value: question.optionB,\n                onChange: e => setQuestion({\n                  ...question,\n                  optionB: e.target.value\n                }),\n                placeholder: \"Enter option B\",\n                maxLength: 200,\n                disabled: addingQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 37\n              }, this), questionErrors.optionB && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-error\",\n                children: questionErrors.optionB\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: [\"Option C \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-asterisk\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 76\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `form-input ${questionErrors.optionC ? 'error' : ''}`,\n                type: \"text\",\n                value: question.optionC,\n                onChange: e => setQuestion({\n                  ...question,\n                  optionC: e.target.value\n                }),\n                placeholder: \"Enter option C\",\n                maxLength: 200,\n                disabled: addingQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 37\n              }, this), questionErrors.optionC && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-error\",\n                children: questionErrors.optionC\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: [\"Option D \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-asterisk\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 76\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `form-input ${questionErrors.optionD ? 'error' : ''}`,\n                type: \"text\",\n                value: question.optionD,\n                onChange: e => setQuestion({\n                  ...question,\n                  optionD: e.target.value\n                }),\n                placeholder: \"Enter option D\",\n                maxLength: 200,\n                disabled: addingQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 37\n              }, this), questionErrors.optionD && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-error\",\n                children: questionErrors.optionD\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: [\"Correct Answer \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-asterisk\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: `form-select ${questionErrors.correctOption ? 'error' : ''}`,\n                value: question.correctOption,\n                onChange: e => setQuestion({\n                  ...question,\n                  correctOption: e.target.value\n                }),\n                disabled: addingQuestion,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select correct answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"A\",\n                  children: \"A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"B\",\n                  children: \"B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"C\",\n                  children: \"C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"D\",\n                  children: \"D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 37\n              }, this), questionErrors.correctOption && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-error\",\n                children: questionErrors.correctOption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: [\"Marks \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-asterisk\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `form-input ${questionErrors.marks ? 'error' : ''}`,\n                type: \"number\",\n                value: question.marks,\n                onChange: e => setQuestion({\n                  ...question,\n                  marks: e.target.value\n                }),\n                min: \"1\",\n                max: \"10\",\n                disabled: addingQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 37\n              }, this), questionErrors.marks && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-error\",\n                children: questionErrors.marks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline\",\n              onClick: handleAddQuestion,\n              disabled: addingQuestion,\n              children: addingQuestion ? 'Adding...' : '+ Add Question'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 33\n            }, this), questionsAdded > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: handleFinishExam,\n              children: [\"Finish Exam (\", questionsAdded, \" questions)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 25\n        }, this), addedQuestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Added Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questions-preview\",\n            children: addedQuestions.map((q, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"question-number\",\n                  children: [\"Q\", i + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"question-marks\",\n                  children: [q.marks, \" marks\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-text\",\n                children: q.questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: q.correctOption === 'A' ? 'correct-option' : '',\n                  children: [\"A. \", q.optionA]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: q.correctOption === 'B' ? 'correct-option' : '',\n                  children: [\"B. \", q.optionB]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: q.correctOption === 'C' ? 'correct-option' : '',\n                  children: [\"C. \", q.optionC]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: q.correctOption === 'D' ? 'correct-option' : '',\n                  children: [\"D. \", q.optionD]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 41\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 9\n  }, this);\n}\n_s(ExamCreator, \"87WDGlXElwKg3ntdX6ZWuHkTp30=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ExamCreator;\nvar _c;\n$RefreshReg$(_c, \"ExamCreator\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","api","jsxDEV","_jsxDEV","ExamCreator","_s","navigate","examId","isEditing","Boolean","exam","setExam","title","description","duration","errors","setErrors","savedExamId","setSavedExamId","saving","setSaving","question","setQuestion","questionText","optionA","optionB","optionC","optionD","correctOption","marks","questionErrors","setQuestionErrors","questionsAdded","setQuestionsAdded","addedQuestions","setAddedQuestions","addingQuestion","setAddingQuestion","loadExamForEditing","error","validateExam","newErrors","trim","length","parseInt","isNaN","Object","keys","validateQuestion","includes","handleSaveExam","examData","res","_res","_res$data","_res2","_res2$data","createExam","data","id","console","log","fullApiError","_res3","_res3$data","_res4","_res4$data","message","createSimpleExam","alert","err","_err$response","_err$response$data","errorMessage","response","handleAddQuestion","questionData","addQuestionToExam","addSimpleQuestion","n","prev","_err$response2","_err$response2$data","handleFinishExam","confirmFinish","window","confirm","handleCancel","confirmCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","type","value","onChange","e","target","placeholder","maxLength","disabled","min","max","rows","onClick","map","q","i","_c","$RefreshReg$"],"sources":["D:/newnew/online-exam-system/reactapp/src/components/ExamCreator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport * as api from '../utils/api';\r\nimport '../styles/forms.css';\r\n\r\nexport default function ExamCreator() {\r\n    const navigate = useNavigate();\r\n    const { examId } = useParams();\r\n    const isEditing = Boolean(examId);\r\n    \r\n    const [exam, setExam] = useState({ \r\n        title: '', \r\n        description: '', \r\n        duration: '' \r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [savedExamId, setSavedExamId] = useState(null);\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    const [question, setQuestion] = useState({\r\n        questionText: '',\r\n        optionA: '',\r\n        optionB: '',\r\n        optionC: '',\r\n        optionD: '',\r\n        correctOption: '',\r\n        marks: '1',\r\n    });\r\n    const [questionErrors, setQuestionErrors] = useState({});\r\n    const [questionsAdded, setQuestionsAdded] = useState(0);\r\n    const [addedQuestions, setAddedQuestions] = useState([]);\r\n    const [addingQuestion, setAddingQuestion] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isEditing) {\r\n            loadExamForEditing();\r\n        }\r\n    }, [examId, isEditing]);\r\n\r\n    const loadExamForEditing = async () => {\r\n        try {\r\n            // Load exam details - you'll need to add this API endpoint\r\n            // const examResponse = await api.getExamById(examId);\r\n            // setExam(examResponse.data);\r\n            // setSavedExamId(examId);\r\n        } catch (error) {\r\n            setErrors({ api: 'Failed to load exam for editing' });\r\n        }\r\n    };\r\n\r\n    const validateExam = () => {\r\n        const newErrors = {};\r\n        \r\n        if (!exam.title || exam.title.trim() === '') {\r\n            newErrors.title = 'Exam title is required';\r\n        } else if (exam.title.length > 100) {\r\n            newErrors.title = 'Title must be 100 characters or less';\r\n        }\r\n        \r\n        if (!exam.description || exam.description.trim() === '') {\r\n            newErrors.description = 'Description is required';\r\n        } else if (exam.description.length > 500) {\r\n            newErrors.description = 'Description must be 500 characters or less';\r\n        }\r\n        \r\n        if (!exam.duration || exam.duration.trim() === '') {\r\n            newErrors.duration = 'Duration is required';\r\n        } else {\r\n            const duration = parseInt(exam.duration, 10);\r\n            if (isNaN(duration) || duration < 10 || duration > 180) {\r\n                newErrors.duration = 'Duration must be between 10 and 180 minutes';\r\n            }\r\n        }\r\n        \r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const validateQuestion = () => {\r\n        const newErrors = {};\r\n        \r\n        if (!question.questionText.trim()) {\r\n            newErrors.questionText = 'Question text is required';\r\n        } else if (question.questionText.length > 500) {\r\n            newErrors.questionText = 'Question text must be 500 characters or less';\r\n        }\r\n        \r\n        if (!question.optionA.trim()) newErrors.optionA = 'Option A is required';\r\n        if (!question.optionB.trim()) newErrors.optionB = 'Option B is required';\r\n        if (!question.optionC.trim()) newErrors.optionC = 'Option C is required';\r\n        if (!question.optionD.trim()) newErrors.optionD = 'Option D is required';\r\n        \r\n        if (!question.correctOption) {\r\n            newErrors.correctOption = 'Please select the correct answer';\r\n        } else if (!['A', 'B', 'C', 'D'].includes(question.correctOption)) {\r\n            newErrors.correctOption = 'Correct answer must be A, B, C, or D';\r\n        }\r\n        \r\n        const marks = parseInt(question.marks, 10);\r\n        if (isNaN(marks) || marks < 1 || marks > 10) {\r\n            newErrors.marks = 'Marks must be between 1 and 10';\r\n        }\r\n        \r\n        setQuestionErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleSaveExam = async () => {\r\n        if (!validateExam()) return;\r\n        \r\n        setSaving(true);\r\n        try {\r\n            const examData = {\r\n                title: exam.title.trim(),\r\n                description: exam.description.trim(),\r\n                duration: parseInt(exam.duration, 10),\r\n            };\r\n\r\n            let res;\r\n            let examId;\r\n            \r\n            try {\r\n                // Try full API first\r\n                res = await api.createExam(examData);\r\n                examId = res?.data?.examId || res?.data?.id;\r\n                console.log('✅ Full API - Created exam with ID:', examId);\r\n            } catch (fullApiError) {\r\n                console.log('❌ Full API failed, trying simple API:', fullApiError.message);\r\n                // Fallback to simple API\r\n                res = await api.createSimpleExam(examData);\r\n                examId = res?.data?.examId || res?.data?.id;\r\n                console.log('✅ Simple API - Created exam with ID:', examId);\r\n            }\r\n            \r\n            console.log('Full response:', res.data);\r\n            setSavedExamId(examId);\r\n            setErrors({});\r\n            \r\n            // Show success message\r\n            alert(`Exam created successfully with ID: ${examId}! You can now add questions.`);\r\n            \r\n        } catch (err) {\r\n            console.error('Exam creation failed:', err);\r\n            const errorMessage = err.response?.data?.message || err.message || 'Failed to create exam';\r\n            setErrors({ api: errorMessage });\r\n            alert('Error creating exam: ' + errorMessage);\r\n        } finally {\r\n            setSaving(false);\r\n        }\r\n    };\r\n\r\n    const handleAddQuestion = async () => {\r\n        if (!savedExamId) {\r\n            alert('Please save the exam first before adding questions');\r\n            return;\r\n        }\r\n        \r\n        if (!validateQuestion()) return;\r\n        \r\n        setAddingQuestion(true);\r\n        try {\r\n            console.log('Adding question to exam ID:', savedExamId);\r\n            const questionData = {\r\n                questionText: question.questionText.trim(),\r\n                optionA: question.optionA.trim(),\r\n                optionB: question.optionB.trim(),\r\n                optionC: question.optionC.trim(),\r\n                optionD: question.optionD.trim(),\r\n                correctOption: question.correctOption,\r\n                marks: parseInt(question.marks, 10),\r\n            };\r\n            console.log('Question data:', questionData);\r\n            \r\n            try {\r\n                // Try full API first\r\n                await api.addQuestionToExam(savedExamId, questionData);\r\n                console.log('✅ Full API success');\r\n            } catch (fullApiError) {\r\n                console.log('❌ Full API failed, trying simple API:', fullApiError.message);\r\n                // Fallback to simple API\r\n                await api.addSimpleQuestion(savedExamId, questionData);\r\n                console.log('✅ Simple API success');\r\n            }\r\n\r\n            setQuestionsAdded((n) => n + 1);\r\n            setAddedQuestions((prev) => [...prev, { ...question }]);\r\n            \r\n            // Reset question form\r\n            setQuestion({\r\n                questionText: '',\r\n                optionA: '',\r\n                optionB: '',\r\n                optionC: '',\r\n                optionD: '',\r\n                correctOption: '',\r\n                marks: '1',\r\n            });\r\n            setQuestionErrors({});\r\n            \r\n        } catch (err) {\r\n            console.error('Question addition failed:', err);\r\n            const errorMessage = err.response?.data?.message || err.message || 'Failed to add question';\r\n            setQuestionErrors({ api: errorMessage });\r\n            alert('Error adding question: ' + errorMessage);\r\n        } finally {\r\n            setAddingQuestion(false);\r\n        }\r\n    };\r\n\r\n    const handleFinishExam = () => {\r\n        if (questionsAdded === 0) {\r\n            alert('Please add at least one question before finishing');\r\n            return;\r\n        }\r\n        \r\n        const confirmFinish = window.confirm(\r\n            `You have created an exam with ${questionsAdded} questions. ` +\r\n            'Would you like to go back to the dashboard?'\r\n        );\r\n        \r\n        if (confirmFinish) {\r\n            navigate('/teacher/dashboard');\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        const confirmCancel = window.confirm(\r\n            'Are you sure you want to cancel? Any unsaved changes will be lost.'\r\n        );\r\n        \r\n        if (confirmCancel) {\r\n            navigate('/teacher/dashboard');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <div className=\"container\">\r\n                <div className=\"form-container\">\r\n                    <div className=\"form-header\">\r\n                        <h2 className=\"form-title\">\r\n                            {isEditing ? 'Edit Exam' : 'Create New Exam'}\r\n                        </h2>\r\n                        <p className=\"form-subtitle\">\r\n                            {isEditing ? 'Modify exam details and questions' : 'Set up your exam details and add questions'}\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* Progress Indicator */}\r\n                    <div className=\"form-progress\">\r\n                        <div className=\"progress-bar\">\r\n                            <div \r\n                                className=\"progress-fill\" \r\n                                style={{ width: savedExamId ? '100%' : '50%' }}\r\n                            ></div>\r\n                        </div>\r\n                        <p className=\"progress-text\">\r\n                            Step {savedExamId ? '2' : '1'} of 2: {savedExamId ? 'Add Questions' : 'Exam Details'}\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* Exam Details Section */}\r\n                    <div className=\"form-section\">\r\n                        <h3>Exam Details</h3>\r\n                        \r\n                        {errors.api && (\r\n                            <div className=\"error-message\">{errors.api}</div>\r\n                        )}\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">\r\n                                    Title <span className=\"required-asterisk\">*</span>\r\n                                </label>\r\n                                <input\r\n                                    className={`form-input ${errors.title ? 'error' : ''}`}\r\n                                    type=\"text\"\r\n                                    value={exam.title}\r\n                                    onChange={(e) => setExam({ ...exam, title: e.target.value })}\r\n                                    placeholder=\"Enter exam title\"\r\n                                    maxLength={100}\r\n                                    disabled={saving}\r\n                                />\r\n                                {errors.title && <span className=\"form-error\">{errors.title}</span>}\r\n                                <span className=\"form-help\">{exam.title.length}/100 characters</span>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">\r\n                                    Duration (minutes) <span className=\"required-asterisk\">*</span>\r\n                                </label>\r\n                                <input\r\n                                    className={`form-input ${errors.duration ? 'error' : ''}`}\r\n                                    type=\"number\"\r\n                                    value={exam.duration}\r\n                                    onChange={(e) => setExam({ ...exam, duration: e.target.value })}\r\n                                    placeholder=\"e.g., 60\"\r\n                                    min=\"10\"\r\n                                    max=\"180\"\r\n                                    disabled={saving}\r\n                                />\r\n                                {errors.duration && <span className=\"form-error\">{errors.duration}</span>}\r\n                                <span className=\"form-help\">Between 10 and 180 minutes</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">\r\n                                Description <span className=\"required-asterisk\">*</span>\r\n                            </label>\r\n                            <textarea\r\n                                className={`form-textarea ${errors.description ? 'error' : ''}`}\r\n                                value={exam.description}\r\n                                onChange={(e) => setExam({ ...exam, description: e.target.value })}\r\n                                placeholder=\"Enter exam description and instructions\"\r\n                                maxLength={500}\r\n                                rows={4}\r\n                                disabled={saving}\r\n                            />\r\n                            {errors.description && <span className=\"form-error\">{errors.description}</span>}\r\n                            <span className=\"form-help\">{exam.description.length}/500 characters</span>\r\n                        </div>\r\n\r\n                        <div className=\"form-actions\">\r\n                            <button \r\n                                className=\"btn btn-secondary\" \r\n                                onClick={handleCancel}\r\n                                disabled={saving}\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                            \r\n                            {!savedExamId && (\r\n                                <button \r\n                                    className=\"btn btn-primary\" \r\n                                    onClick={handleSaveExam}\r\n                                    disabled={saving}\r\n                                >\r\n                                    {saving ? 'Saving...' : 'Save Exam & Add Questions'}\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Questions Section */}\r\n                    {savedExamId && (\r\n                        <div className=\"form-section\">\r\n                            <div className=\"section-header\">\r\n                                <h3>Add Questions</h3>\r\n                                <span className=\"questions-count\">\r\n                                    Questions Added: {questionsAdded}\r\n                                </span>\r\n                            </div>\r\n\r\n                            {questionErrors.api && (\r\n                                <div className=\"error-message\">{questionErrors.api}</div>\r\n                            )}\r\n\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">\r\n                                    Question Text <span className=\"required-asterisk\">*</span>\r\n                                </label>\r\n                                <textarea\r\n                                    className={`form-textarea ${questionErrors.questionText ? 'error' : ''}`}\r\n                                    value={question.questionText}\r\n                                    onChange={(e) => setQuestion({ ...question, questionText: e.target.value })}\r\n                                    placeholder=\"Enter your question here\"\r\n                                    maxLength={500}\r\n                                    rows={3}\r\n                                    disabled={addingQuestion}\r\n                                />\r\n                                {questionErrors.questionText && (\r\n                                    <span className=\"form-error\">{questionErrors.questionText}</span>\r\n                                )}\r\n                                <span className=\"form-help\">{question.questionText.length}/500 characters</span>\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label\">Option A <span className=\"required-asterisk\">*</span></label>\r\n                                    <input\r\n                                        className={`form-input ${questionErrors.optionA ? 'error' : ''}`}\r\n                                        type=\"text\"\r\n                                        value={question.optionA}\r\n                                        onChange={(e) => setQuestion({ ...question, optionA: e.target.value })}\r\n                                        placeholder=\"Enter option A\"\r\n                                        maxLength={200}\r\n                                        disabled={addingQuestion}\r\n                                    />\r\n                                    {questionErrors.optionA && (\r\n                                        <span className=\"form-error\">{questionErrors.optionA}</span>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label\">Option B <span className=\"required-asterisk\">*</span></label>\r\n                                    <input\r\n                                        className={`form-input ${questionErrors.optionB ? 'error' : ''}`}\r\n                                        type=\"text\"\r\n                                        value={question.optionB}\r\n                                        onChange={(e) => setQuestion({ ...question, optionB: e.target.value })}\r\n                                        placeholder=\"Enter option B\"\r\n                                        maxLength={200}\r\n                                        disabled={addingQuestion}\r\n                                    />\r\n                                    {questionErrors.optionB && (\r\n                                        <span className=\"form-error\">{questionErrors.optionB}</span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label\">Option C <span className=\"required-asterisk\">*</span></label>\r\n                                    <input\r\n                                        className={`form-input ${questionErrors.optionC ? 'error' : ''}`}\r\n                                        type=\"text\"\r\n                                        value={question.optionC}\r\n                                        onChange={(e) => setQuestion({ ...question, optionC: e.target.value })}\r\n                                        placeholder=\"Enter option C\"\r\n                                        maxLength={200}\r\n                                        disabled={addingQuestion}\r\n                                    />\r\n                                    {questionErrors.optionC && (\r\n                                        <span className=\"form-error\">{questionErrors.optionC}</span>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label\">Option D <span className=\"required-asterisk\">*</span></label>\r\n                                    <input\r\n                                        className={`form-input ${questionErrors.optionD ? 'error' : ''}`}\r\n                                        type=\"text\"\r\n                                        value={question.optionD}\r\n                                        onChange={(e) => setQuestion({ ...question, optionD: e.target.value })}\r\n                                        placeholder=\"Enter option D\"\r\n                                        maxLength={200}\r\n                                        disabled={addingQuestion}\r\n                                    />\r\n                                    {questionErrors.optionD && (\r\n                                        <span className=\"form-error\">{questionErrors.optionD}</span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label\">\r\n                                        Correct Answer <span className=\"required-asterisk\">*</span>\r\n                                    </label>\r\n                                    <select\r\n                                        className={`form-select ${questionErrors.correctOption ? 'error' : ''}`}\r\n                                        value={question.correctOption}\r\n                                        onChange={(e) => setQuestion({ ...question, correctOption: e.target.value })}\r\n                                        disabled={addingQuestion}\r\n                                    >\r\n                                        <option value=\"\">Select correct answer</option>\r\n                                        <option value=\"A\">A</option>\r\n                                        <option value=\"B\">B</option>\r\n                                        <option value=\"C\">C</option>\r\n                                        <option value=\"D\">D</option>\r\n                                    </select>\r\n                                    {questionErrors.correctOption && (\r\n                                        <span className=\"form-error\">{questionErrors.correctOption}</span>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"form-label\">\r\n                                        Marks <span className=\"required-asterisk\">*</span>\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-input ${questionErrors.marks ? 'error' : ''}`}\r\n                                        type=\"number\"\r\n                                        value={question.marks}\r\n                                        onChange={(e) => setQuestion({ ...question, marks: e.target.value })}\r\n                                        min=\"1\"\r\n                                        max=\"10\"\r\n                                        disabled={addingQuestion}\r\n                                    />\r\n                                    {questionErrors.marks && (\r\n                                        <span className=\"form-error\">{questionErrors.marks}</span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-actions\">\r\n                                <button \r\n                                    className=\"btn btn-outline\" \r\n                                    onClick={handleAddQuestion}\r\n                                    disabled={addingQuestion}\r\n                                >\r\n                                    {addingQuestion ? 'Adding...' : '+ Add Question'}\r\n                                </button>\r\n                                \r\n                                {questionsAdded > 0 && (\r\n                                    <button \r\n                                        className=\"btn btn-success\" \r\n                                        onClick={handleFinishExam}\r\n                                    >\r\n                                        Finish Exam ({questionsAdded} questions)\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Added Questions Preview */}\r\n                    {addedQuestions.length > 0 && (\r\n                        <div className=\"form-section\">\r\n                            <h3>Added Questions</h3>\r\n                            <div className=\"questions-preview\">\r\n                                {addedQuestions.map((q, i) => (\r\n                                    <div key={i} className=\"question-preview\">\r\n                                        <div className=\"question-header\">\r\n                                            <span className=\"question-number\">Q{i + 1}</span>\r\n                                            <span className=\"question-marks\">{q.marks} marks</span>\r\n                                        </div>\r\n                                        <div className=\"question-text\">{q.questionText}</div>\r\n                                        <div className=\"question-options\">\r\n                                            <div className={q.correctOption === 'A' ? 'correct-option' : ''}>A. {q.optionA}</div>\r\n                                            <div className={q.correctOption === 'B' ? 'correct-option' : ''}>B. {q.optionB}</div>\r\n                                            <div className={q.correctOption === 'C' ? 'correct-option' : ''}>C. {q.optionC}</div>\r\n                                            <div className={q.correctOption === 'D' ? 'correct-option' : ''}>D. {q.optionD}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}