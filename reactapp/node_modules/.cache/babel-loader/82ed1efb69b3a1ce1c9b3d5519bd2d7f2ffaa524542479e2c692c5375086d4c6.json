{"ast":null,"code":"var _jsxFileName = \"D:\\\\newnew\\\\online-exam-system\\\\reactapp\\\\src\\\\components\\\\StudentExamList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as api from '../utils/api';\nimport '../styles/lists.css';\nimport '../styles/dashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StudentExamList() {\n  _s();\n  const [exams, setExams] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [startingExam, setStartingExam] = useState(null);\n  const navigate = useNavigate();\n\n  // Get current user\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  const studentUsername = user.username || 'student1';\n  useEffect(() => {\n    fetchExams();\n  }, []);\n  const fetchExams = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const res = await api.getSimpleExams();\n      setExams(res.data || []);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setError(((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || e.message || 'Failed to load exams');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStartExam = async (examId, examTitle) => {\n    const confirmStart = window.confirm(`Are you ready to start \"${examTitle}\"?\\n\\n` + 'Once started, the timer will begin and you must complete the exam within the time limit.');\n    if (!confirmStart) return;\n    setStartingExam(examId);\n    try {\n      const response = await api.startExam(examId, studentUsername);\n      const {\n        studentExamId,\n        questions\n      } = response.data;\n\n      // Navigate to exam interface with questions data\n      navigate(`/student/exams/${studentExamId}`, {\n        state: {\n          questions,\n          exam: exams.find(e => e.examId === examId),\n          studentExamId,\n          studentUsername\n        }\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to start exam');\n    } finally {\n      setStartingExam(null);\n    }\n  };\n  const formatDuration = minutes => {\n    if (minutes >= 60) {\n      const hours = Math.floor(minutes / 60);\n      const remainingMinutes = minutes % 60;\n      return remainingMinutes > 0 ? `${hours}h ${remainingMinutes}m` : `${hours}h`;\n    }\n    return `${minutes} minutes`;\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading available exams...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"welcome-title\",\n            children: \"Available Exams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"welcome-subtitle\",\n            children: \"Choose an exam to start. Make sure you have enough time to complete it.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-number\",\n            children: exams.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Available Exams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"list-title\",\n            children: \"Exams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"list-count\",\n            children: [exams.length, \" available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-body\",\n          children: exams.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-icon\",\n              children: \"\\uD83D\\uDCDD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"empty-title\",\n              children: \"No Exams Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-description\",\n              children: \"There are currently no active exams. Please check back later or contact your teacher.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"empty-action\",\n              onClick: () => navigate('/student/dashboard'),\n              children: \"Back to Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this) : exams.map(exam => {\n            var _exam$createdBy;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"item-title\",\n                  children: exam.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item-meta\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-badge status-active\",\n                    children: \"Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"item-description\",\n                children: exam.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-icon\",\n                    children: \"\\u23F1\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Duration: \", formatDuration(exam.duration)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-icon\",\n                    children: \"\\uD83D\\uDCC5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Created: \", formatDate(exam.createdAt)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-icon\",\n                    children: \"\\uD83D\\uDC68\\u200D\\uD83C\\uDFEB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"By: \", ((_exam$createdBy = exam.createdBy) === null || _exam$createdBy === void 0 ? void 0 : _exam$createdBy.username) || exam.createdBy || 'Teacher']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-btn-small btn-view\",\n                  onClick: () => handleStartExam(exam.examId, exam.title),\n                  disabled: startingExam === exam.examId,\n                  children: startingExam === exam.examId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: \"\\u23F3 Starting...\"\n                  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: \"\\uD83D\\uDE80 Start Exam\"\n                  }, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"action-btn-small\",\n                  style: {\n                    background: '#f0fff4',\n                    color: '#22543d',\n                    border: '1px solid #9ae6b4',\n                    cursor: 'default'\n                  },\n                  children: \"\\uD83D\\uDCCA MCQ Format\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this)]\n            }, exam.examId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), exams.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-icon\",\n          children: \"\\uD83D\\uDCA1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Exam Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-description\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              textAlign: 'left',\n              paddingLeft: '1.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ensure you have a stable internet connection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Do not refresh or close the browser during the exam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Your answers are automatically saved every 30 seconds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Submit your exam before the time runs out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"You can navigate between questions using the question palette\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(StudentExamList, \"+p0r6QHNsO5LY8SConEDO2XAn0w=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentExamList;\nvar _c;\n$RefreshReg$(_c, \"StudentExamList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","api","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentExamList","_s","exams","setExams","error","setError","loading","setLoading","startingExam","setStartingExam","navigate","user","JSON","parse","localStorage","getItem","studentUsername","username","fetchExams","res","getSimpleExams","data","e","_e$response","_e$response$data","response","message","handleStartExam","examId","examTitle","confirmStart","window","confirm","startExam","studentExamId","questions","state","exam","find","_error$response","_error$response$data","alert","formatDuration","minutes","hours","Math","floor","remainingMinutes","formatDate","dateString","Date","toLocaleDateString","year","month","day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","map","_exam$createdBy","title","description","duration","createdAt","createdBy","disabled","style","background","color","border","cursor","textAlign","paddingLeft","_c","$RefreshReg$"],"sources":["D:/newnew/online-exam-system/reactapp/src/components/StudentExamList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as api from '../utils/api';\r\nimport '../styles/lists.css';\r\nimport '../styles/dashboard.css';\r\n\r\nexport default function StudentExamList() {\r\n    const [exams, setExams] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [startingExam, setStartingExam] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    // Get current user\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n    const studentUsername = user.username || 'student1';\r\n\r\n    useEffect(() => {\r\n        fetchExams();\r\n    }, []);\r\n\r\n    const fetchExams = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError('');\r\n            const res = await api.getSimpleExams();\r\n            setExams(res.data || []);\r\n        } catch (e) {\r\n            setError(e.response?.data?.message || e.message || 'Failed to load exams');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleStartExam = async (examId, examTitle) => {\r\n        const confirmStart = window.confirm(\r\n            `Are you ready to start \"${examTitle}\"?\\n\\n` +\r\n            'Once started, the timer will begin and you must complete the exam within the time limit.'\r\n        );\r\n\r\n        if (!confirmStart) return;\r\n\r\n        setStartingExam(examId);\r\n        try {\r\n            const response = await api.startExam(examId, studentUsername);\r\n            const { studentExamId, questions } = response.data;\r\n            \r\n            // Navigate to exam interface with questions data\r\n            navigate(`/student/exams/${studentExamId}`, {\r\n                state: {\r\n                    questions,\r\n                    exam: exams.find(e => e.examId === examId),\r\n                    studentExamId,\r\n                    studentUsername\r\n                }\r\n            });\r\n        } catch (error) {\r\n            alert(error.response?.data?.message || 'Failed to start exam');\r\n        } finally {\r\n            setStartingExam(null);\r\n        }\r\n    };\r\n\r\n    const formatDuration = (minutes) => {\r\n        if (minutes >= 60) {\r\n            const hours = Math.floor(minutes / 60);\r\n            const remainingMinutes = minutes % 60;\r\n            return remainingMinutes > 0 ? `${hours}h ${remainingMinutes}m` : `${hours}h`;\r\n        }\r\n        return `${minutes} minutes`;\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        return new Date(dateString).toLocaleDateString('en-US', {\r\n            year: 'numeric',\r\n            month: 'short',\r\n            day: 'numeric'\r\n        });\r\n    };\r\n\r\n    if (loading) return <div className=\"loading\">Loading available exams...</div>;\r\n    if (error) return <div className=\"error-message\">{error}</div>;\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <div className=\"container\">\r\n                {/* Header */}\r\n                <div className=\"welcome-section\">\r\n                    <div className=\"welcome-content\">\r\n                        <h1 className=\"welcome-title\">Available Exams</h1>\r\n                        <p className=\"welcome-subtitle\">\r\n                            Choose an exam to start. Make sure you have enough time to complete it.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Stats */}\r\n                <div className=\"stats-grid\">\r\n                    <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{exams.length}</span>\r\n                        <span className=\"stat-label\">Available Exams</span>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Exams List */}\r\n                <div className=\"list-container\">\r\n                    <div className=\"list-header\">\r\n                        <h2 className=\"list-title\">Exams</h2>\r\n                        <span className=\"list-count\">{exams.length} available</span>\r\n                    </div>\r\n\r\n                    <div className=\"list-body\">\r\n                        {exams.length === 0 ? (\r\n                            <div className=\"empty-state\">\r\n                                <div className=\"empty-icon\">📝</div>\r\n                                <h3 className=\"empty-title\">No Exams Available</h3>\r\n                                <p className=\"empty-description\">\r\n                                    There are currently no active exams. Please check back later or contact your teacher.\r\n                                </p>\r\n                                <button \r\n                                    className=\"empty-action\"\r\n                                    onClick={() => navigate('/student/dashboard')}\r\n                                >\r\n                                    Back to Dashboard\r\n                                </button>\r\n                            </div>\r\n                        ) : (\r\n                            exams.map((exam) => (\r\n                                <div key={exam.examId} className=\"list-item\">\r\n                                    <div className=\"item-header\">\r\n                                        <h3 className=\"item-title\">{exam.title}</h3>\r\n                                        <div className=\"item-meta\">\r\n                                            <span className=\"status-badge status-active\">\r\n                                                Available\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <p className=\"item-description\">{exam.description}</p>\r\n                                    \r\n                                    <div className=\"item-stats\">\r\n                                        <div className=\"stat-item\">\r\n                                            <span className=\"stat-icon\">⏱️</span>\r\n                                            <span>Duration: {formatDuration(exam.duration)}</span>\r\n                                        </div>\r\n                                        <div className=\"stat-item\">\r\n                                            <span className=\"stat-icon\">📅</span>\r\n                                            <span>Created: {formatDate(exam.createdAt)}</span>\r\n                                        </div>\r\n                                        <div className=\"stat-item\">\r\n                                            <span className=\"stat-icon\">👨‍🏫</span>\r\n                                            <span>By: {exam.createdBy?.username || exam.createdBy || 'Teacher'}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"item-actions\">\r\n                                        <button\r\n                                            className=\"action-btn-small btn-view\"\r\n                                            onClick={() => handleStartExam(exam.examId, exam.title)}\r\n                                            disabled={startingExam === exam.examId}\r\n                                        >\r\n                                            {startingExam === exam.examId ? (\r\n                                                <>⏳ Starting...</>\r\n                                            ) : (\r\n                                                <>🚀 Start Exam</>\r\n                                            )}\r\n                                        </button>\r\n                                        \r\n                                        <div className=\"action-btn-small\" style={{\r\n                                            background: '#f0fff4',\r\n                                            color: '#22543d',\r\n                                            border: '1px solid #9ae6b4',\r\n                                            cursor: 'default'\r\n                                        }}>\r\n                                            📊 MCQ Format\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Instructions */}\r\n                {exams.length > 0 && (\r\n                    <div className=\"dashboard-card\">\r\n                        <div className=\"card-icon\">💡</div>\r\n                        <h3 className=\"card-title\">Exam Instructions</h3>\r\n                        <div className=\"card-description\">\r\n                            <ul style={{ textAlign: 'left', paddingLeft: '1.5rem' }}>\r\n                                <li>Ensure you have a stable internet connection</li>\r\n                                <li>Do not refresh or close the browser during the exam</li>\r\n                                <li>Your answers are automatically saved every 30 seconds</li>\r\n                                <li>Submit your exam before the time runs out</li>\r\n                                <li>You can navigate between questions using the question palette</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}